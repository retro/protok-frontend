mutation RequestLoginCode($email: String!) {
  requestLoginCode(email: $email)
}

mutation LoginWithCode($email: String!, $code: String!) {
  loginWithCode(email: $email, code: $code) {
    account {
      ...accountData
    }
    token
  }
}

query CurrentAccount {
  currentAccount {
    ...accountData
  }
}

fragment accountData on Account {
  id
  username
  email
}


query OrganizationMemberships {
  currentAccount {
    organizationMemberships {
      memberRole
      organization {
        id
        name
      }
    }
  }
}

mutation CreateOrganization($input: CreateOrganizationInput!) {
  createOrganization(input:$input) {
    ...organizationData
  }
}

mutation UpdateOrganization($input: UpdateOrganizationInput!) {
  updateOrganization(input:$input) {
    ...organizationData
  }
}

query FetchOrganization($id: ID!) {
  fetchOrganization(id:$id) {
    ...organizationData
  }
}

fragment organizationData on Organization {
  id
  name
  membership {
    memberRole
  }
  memberships {
    memberRole
    account {
      id
      email
    }
  }
}

query FetchOrganizationProjects($id: ID!) {
  fetchOrganization(id: $id) {
    projects {
      ...projectData
    }
  }
}

query FetchProject($id:ID!) {
  fetchProject(id: $id) {
    ...projectData
  }
}

mutation CreateProject($input: CreateProjectInput!) {
  createProject(input:$input) {
    ...projectData
  }
}

mutation UpdateProject($input: UpdateProjectInput!) {
  updateProject(input:$input) {
    ...projectData
  }
}

fragment projectData on Project {
  id
  name
  organization {
    id
  }
}

query FetchProjectFlows($id:ID!) {
  fetchProject(id:$id) {
    flows {
      ...flowData
    }
  }
}

query FetchFlow($id:ID!) {
  fetchFlow(id: $id) {
    ...fullFlowData
  }
}

mutation CreateFlow($input: CreateFlowInput!) {
  createFlow(input:$input) {
    ...flowData
  }
}

mutation UpdateFlow($input: UpdateFlowInput!) {
  updateFlow(input:$input) {
    ...fullFlowData
  }
}

mutation DeleteFlow($id: ID!) {
  deleteFlow(id: $id)
}

mutation CreateFlowScreen($input:CreateFlowScreenInput!) {
  createFlowScreen(input:$input){
    ...flowScreenData
  }
}


mutation CreateFlowEvent($input:CreateFlowEventInput!) {
  createFlowEvent(input:$input){
    ...flowEventData
  }
}


mutation CreateFlowSwitch($input:CreateFlowSwitchInput!) {
  createFlowSwitch(input:$input){
    ...flowSwitchData
  }
}


mutation CreateFlowFlowRef($input:CreateFlowFlowRefInput!) {
  createFlowFlowRef(input:$input){
    ...flowFlowRefData
  }
}

mutation CreateFlowScreenHotspot($input:CreateFlowScreenHotspotInput!) {
  createFlowScreenHotspot(input:$input){
    ...flowScreenHotspotData
  }
}

mutation CreateFlowSwitchOption($input:CreateFlowSwitchOptionInput!) {
  createFlowSwitchOption(input:$input){
    ...flowSwitchOptionData
  }
}

mutation UpdateFlowScreen($input:UpdateFlowScreenInput!) {
  updateFlowScreen(input:$input){
    ...flowScreenData
  }
}


mutation UpdateFlowEvent($input:UpdateFlowEventInput!) {
  updateFlowEvent(input:$input){
    ...flowEventData
  }
}


mutation UpdateFlowSwitch($input:UpdateFlowSwitchInput!) {
  updateFlowSwitch(input:$input){
    ...flowSwitchData
  }
}


mutation UpdateFlowFlowRef($input:UpdateFlowFlowRefInput!) {
  updateFlowFlowRef(input:$input){
    ...flowFlowRefData
  }
}

mutation UpdateFlowScreenHotspot($input:UpdateFlowScreenHotspotInput!) {
  updateFlowScreenHotspot(input:$input){
    ...flowScreenHotspotData
  }
}

mutation UpdateFlowSwitchOption($input:UpdateFlowSwitchOptionInput!) {
  updateFlowSwitchOption(input:$input){
    ...flowSwitchOptionData
  }
}

mutation DeleteFlowNode($id: ID!) {
  deleteFlowNode(id: $id)
}

fragment flowData on Flow {
  id
  name
  project {
    id
  }
}

fragment fullFlowData on Flow {
  ...flowData
  flowNodes {
    ...flowNodeData
  }
}

fragment flowNodeData on FlowNode {
  id
  ... on FlowSwitch {
    ...flowSwitchData
  }
  ... on FlowFlowRef {
    ...flowFlowRefData
  }
  ... on FlowScreen {
    ...flowScreenData
  }
  ... on FlowEvent {
    ...flowEventData
  }
}

fragment flowSwitchData on FlowSwitch {
  id
  type
  isEntrypoint
  name
  description
  options {
    ...flowSwitchOptionData
  }
}

fragment flowSwitchOptionData on FlowSwitchOption {
  id
  name
  description
  targetFlowNode {
    id
  }
}

fragment flowScreenData on FlowScreen {
  id
  type
  isEntrypoint
  name
  description
  projectFile {
    ...projectFileData
  }
  hotspots {
    ...flowScreenHotspotData
  }
}

fragment flowScreenHotspotData on FlowScreenHotspot {
  id
  name
  description
  coordinates {
    top
    right
    bottom
    left
  }
  dimensions {
    width
    height
  }
  targetFlowNode {
    id
  }
}

fragment flowEventData on FlowEvent {
  id
  type
  isEntrypoint
  name
  description
  targetFlowNode {
    id
  }
}

fragment flowFlowRefData on FlowFlowRef {
  id
  type
  isEntrypoint
  targetFlow {
    id
    name
  }
}

mutation CreateProjectFile($input: CreateProjectFileInput!) {
  createProjectFile(input:$input) {
    ...projectFileData
  }
}

fragment projectFileData on ProjectFile {
  id
  serverFilename
  uploadUrl
}

mutation DeleteFlowSwitchOption($id: ID!) {
  deleteFlowSwitchOption(id:$id)
}

mutation DeleteFlowScreenHotspot($id: ID!) {
  deleteFlowScreenHotspot(id:$id)
}

mutation InviteOrganizationMember($organizationId:ID!, $email: String!){
  inviteOrganizationMember(organizationId: $organizationId, email:$email) {
    memberRole
  }
}
